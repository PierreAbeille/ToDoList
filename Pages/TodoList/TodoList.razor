@page "/todolist"
@inject TodoService TodoService

<SfButtonGroup>
    <SfButton @onclick="() => SetFilter(TodoFilter.All)">All</SfButton>
    <SfButton @onclick="() => SetFilter(TodoFilter.Active)">Active</SfButton>
    <SfButton @onclick="() => SetFilter(TodoFilter.Completed)">Completed</SfButton>
</SfButtonGroup>

<SfGrid DataSource="@Todos" AllowFiltering="true">
    <GridColumns>
        <GridColumn HeaderText="Done" TextAlign="TextAlign.Center" Width="120">
            <Template>
                @{
                    var todo = context as TodoItem;
                    <SfCheckBox @bind-Checked="@todo.IsDone"></SfCheckBox>
                }
            </Template>
        </GridColumn>
        <GridColumn Field=@nameof(TodoItem.Title) HeaderText="Title" Width="120"></GridColumn>
        <GridColumn Field=@nameof(TodoItem.Description) HeaderText="Description" Width="120"></GridColumn>
        <GridColumn Field=@nameof(TodoItem.DueDate) HeaderText="Due Date" Type="ColumnType.Date" Format="dd/MM/yyyy" Width="120"></GridColumn>
        <GridColumn Field=@nameof(TodoItem.Id) HeaderText="Actions" TextAlign="TextAlign.Center" Width="120">
            <Template>
                <SfButton @onclick="() => Remove(context as TodoItem)">Remove</SfButton>
            </Template>
        </GridColumn>
    </GridColumns>
</SfGrid>

@code {
            public List<TodoItem> Todos { get; set; }
            public TodoFilter CurrentFilter { get; set;}

            protected override void OnInitialized()
            {
                Todos = TodoService.GetAll();
                CurrentFilter = TodoFilter.All;
            }

            private void SetFilter(TodoFilter filter)
            {
                CurrentFilter = filter;
                Todos = TodoService.GetByFilter(CurrentFilter);
                StateHasChanged();
            }

            private void Remove(TodoItem todo)
            {
                Guid id = todo.Id;
                TodoService.Delete(id);

                Todos = TodoService.GetAll();
                StateHasChanged();
            }
}